{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "26f9422f_9d0f2a28",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-13T19:07:27Z",
      "side": 1,
      "message": "Can someone please report this as a bug with steps to reproduce?  This is fine that we\u0027re working around this in the webui, but this is a failure on the Redfish interface, so it effects users beyond just the webui, and ideally should be fixed in bmcweb or ldap implementations",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 39
      },
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5e97d99_b303ae42",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-05-13T20:20:09Z",
      "side": 1,
      "message": "Hello Ed,\n\nCan anyone suggest which Redfish interface specifically is supposed to be good for the purpose?\n\nCurrently webui asks for `/redfish/v1/AccountService/Accounts/${username}` and by definition it\u0027s something described by \"The ManagerAccount schema [which] defines the user accounts that are owned by a manager.\" But LDAP and other remote accounts are not owned by a manager, and they can not be part of the collection (as there might be no way to enumerate them all even).\n\nDo you think bmcweb might need to special-case requests for that endpoint when currently logged in user is requested and return RoleId even if it\u0027s not owned by the local manager and not present in the Accounts collection? This seems to be against what Redfish dictates.",
      "parentUuid": "26f9422f_9d0f2a28",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 39
      },
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "69f311c0_6012b65f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-05-13T21:02:00Z",
      "side": 1,
      "message": "/redfish/v1/AccountService/Accounts/${username}\n\nIs not an appropriate way to access a redfish resource.  Navigating to /redfish/v1 -\u003e AccountService -\u003e Accounts and enumerating the resources, or using a filter query to find a given resource is the \"correct\" way.  Some implementations likely use UUIDs, numbers, or other things in their URL.  Even bmcweb at some point needs to move away from username, because changing the username via patch ends up changing the URL, which is a problem for implementations that expect the Accounts to be relatively immutable.\n\n\n\u003e But LDAP and other remote accounts are not owned by a manager, and they can not be part of the collection (as there might be no way to enumerate them all even).\n\n\u003e Do you think bmcweb might need to special-case requests for that endpoint when currently logged in user is requested and return RoleId \n\nNo, I think that bmcweb should just return the RoleId as part of the session that\u0027s created.  https://redfish.dmtf.org/schemas/v1/Session_v1.xml V1.7 includes Roles that can be used on a session, and is pretty trivial to implement I would think (we already have to do a role lookup on login).  Then after that, the UI shouldn\u0027t assume the person logged into the BMC has a user account at all, because it might not.\n\nFWIW, it\u0027s these kinds of answers which is why I really wish people would loop in Redfish maintainers when they hit walls like this, instead of implementing things like getting a ManagerAccount that might not exist, using bmcweb-specific implementation details.  (to be clear, I\u0027m not frustrated with you for trying to fix it, I\u0027m frustrated with the person that implemented this way initially without asking).  This seems pretty doable to fix using Session, and avoiding getting Account altogether.",
      "parentUuid": "e5e97d99_b303ae42",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 39
      },
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbe38405_6c0d7818",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-05-14T06:54:16Z",
      "side": 1,
      "message": "\u003e\u003e /redfish/v1/AccountService/Accounts/${username}\n\u003e \n\u003e Is not an appropriate way to access a redfish resource.\n\u003e...\n\nIndeed.\n\n\u003e \u003e Do you think bmcweb might need to special-case requests for that endpoint when currently logged in user is requested and return RoleId \n\u003e \n\u003e No, I think that bmcweb should just return the RoleId as part of the session that\u0027s created.\n\nYes, I see. And it is not a single role even but a set of them.\n \n\u003e FWIW, it\u0027s these kinds of answers which is why I really wish people would loop in Redfish maintainers when they hit walls like this, instead of implementing things like getting a ManagerAccount that might not exist\n\nFor the reference, it was initially implemented for a very different purpose: to see if the interface needs to redirect user to the password change page, as no other action is possible with an expired password, see https://gerrit.openbmc.org/c/openbmc/webui-vue/+/33955 .\n\nRe getting Redfish maintainers in the loop, do you have a practical advice for the webui-vue maintainers, should it be codified somewhere?\n\n\u003e This seems pretty doable to fix using Session, and avoiding getting Account altogether.\n\nYes, this looks like a correct and straightforward way. But what to do with the expired passwords? It should rather be fixed too along the way I guess?",
      "parentUuid": "69f311c0_6012b65f",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 39
      },
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6e23719_abb6cd54",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-05-02T13:45:15Z",
      "side": 1,
      "message": "Just rebased it on top of current master so that Gerrit would report it as mergeabl e.\nIs anything else missing, have I answered all the review comments?",
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5d1e1830_b3143111",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-02T16:36:39Z",
      "side": 1,
      "message": "Added Damian.",
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d17ccbf_79e7f695",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001682
      },
      "writtenOn": "2024-05-03T11:53:13Z",
      "side": 1,
      "message": "Partial agree on these code changes. We are knowingly allowing all remote users as Admin even if we can configure those users as Operator/Readonly as part of Role Group. Is that correct? This may lead to displaying incorrect privilege details.",
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc5e4808_71309ed2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-05-03T12:05:43Z",
      "side": 1,
      "message": "\u003e We are knowingly allowing all remote users as Admin even if we can configure those users as Operator/Readonly as part of Role Group.\n\nYes, e.g. LDAP mapping allows to map LDAP groups to Redfish groups so the remote user can be in Readonly group but we have no way to know currently. And without this change logging in is not possible at all, that\u0027s a regression (!) compared to the situation before routing restrictions were added.\n\n\u003e This may lead to displaying incorrect privilege details.\n\nWhich part of webui displays privilege details for remote users? The remote users are not listed in the \"User management\" table at all because Redfish server can not provide a list anyway.",
      "parentUuid": "6d17ccbf_79e7f695",
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52dce3b2_1dde4c5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1001682
      },
      "writtenOn": "2024-05-03T13:40:14Z",
      "side": 1,
      "message": "Yes. Currently we are not displaying privilege information in web ui but in future, we may need to display privilege information under Profile Settings for reference.\n\nYes, e.g. LDAP mapping allows to map LDAP groups to Redfish groups so the remote user can be in Readonly group but we have no way to know currently. And without this change logging in is not possible at all, that\u0027s a regression (!) compared to the situation before routing restrictions were added.\n\n[Kiran]. Ok.Understand. If others are ok,then we can proceed further.",
      "parentUuid": "dc5e4808_71309ed2",
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66d14070_841b012f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-05-03T16:46:19Z",
      "side": 1,
      "message": "\u003e Currently we are not displaying privilege information in web ui but in future, we may need to display privilege information under Profile Settings for reference.\n\nGood point. So probably instead of storing fake role we should just leave it as `null` and instead modify the router restrictions? It looks like the code to filter navigation items is already handling this case.\n\nThis seems to be a neater approach, I\u0027ll check and get back to you, thank you.",
      "parentUuid": "52dce3b2_1dde4c5e",
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0747a13_40c9dada",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-05-03T17:11:29Z",
      "side": 1,
      "message": "\u003e So probably instead of storing fake role we should just leave it as `null`\n\nNo, this won\u0027t work nicely because the router will try to request it again and again on any transition thinking it might be not set because we just refreshed the page (so we have the cookies, the user is logged in but the store is empty).\n\nSo I can store role `Unknown` instead and then special-case it in `allowRouterToNavigate()` and `filteredNavItem()`.\n\nWhich approach do you prefer, fake `Administrator` role (current patch as is) or special-casing for `Unknown` (the complexity will increase a bit)? Given that currently the role is not shown anywere and hopefully in the future either the web ui will get the probing functionality or at least bmcweb will start reporting real role for remote users I\u0027d be tempted to keep the current patch.",
      "parentUuid": "66d14070_841b012f",
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ae24b4b_fcc542f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-05T20:04:55Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e0747a13_40c9dada",
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63b5a4ff_d7b5253d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-05-05T20:04:55Z",
      "side": 1,
      "message": "I don\u0027t see any opposition to going with this and this fixes https://github.com/openbmc/webui-vue/issues/110. \nThis has sat long enough.",
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c387f963_605163d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-05-28T17:22:06Z",
      "side": 1,
      "message": "Filed three tickets:\n\n1. bmcweb `Roles` handling https://github.com/openbmc/bmcweb/issues/275\n2. Webui-vue coordination with Redfish maintainers https://github.com/openbmc/webui-vue/issues/117\n3. Webui-vue Redfish-correct way of handling expired passwords/accounts https://github.com/openbmc/webui-vue/issues/118",
      "revId": "2b33526c41c23217365e8eb0523d182bcdee622a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ],
  "submitRequirementResults": []
}