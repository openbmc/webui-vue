{
  "comments": [
    {
      "key": {
        "uuid": "d24158e3_480183f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-07-30T22:59:40Z",
      "side": 1,
      "message": "Can you do this without https://gerrit.openbmc-project.xyz/c/openbmc/webui-vue/+/34981 ? `Use standard auth method for redfish`",
      "range": {
        "startLine": 8,
        "startChar": 0,
        "endLine": 9,
        "endChar": 61
      },
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78145aa7_c96f2cb6",
        "filename": "src/router/index.js",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2020-07-27T22:45:09Z",
      "side": 1,
      "message": "Do we need to clear and enable cache with each navigation change? It would be nice to access the cache across pages that access the same endpoints (happens on a few pages)",
      "range": {
        "startLine": 217,
        "startChar": 0,
        "endLine": 218,
        "endChar": 20
      },
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f186bc02_ce1aac8c",
        "filename": "src/router/index.js",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2020-07-27T22:47:26Z",
      "side": 1,
      "message": "Hmm, or I wonder if that would cause some stale data. Also not sure if there is a better way to implement this together with the Vuex store. I\u0027ll need to do some research. any thoughts?",
      "parentUuid": "78145aa7_c96f2cb6",
      "range": {
        "startLine": 217,
        "startChar": 0,
        "endLine": 218,
        "endChar": 20
      },
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "449eee89_6e6a8b2e",
        "filename": "src/router/index.js",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1000888
      },
      "writtenOn": "2020-07-28T03:31:56Z",
      "side": 1,
      "message": "As you say it could cause stale data. Any improvements in caching mechanism need to be thought through and this PR just introduces starting point with 100% safe behavior. I introduced cache only to prevent fetching chassisId multiple times on one page if multiple views are requesting it. I would prefer to not address or discuss cross-request caching in this PR.",
      "parentUuid": "f186bc02_ce1aac8c",
      "range": {
        "startLine": 217,
        "startChar": 0,
        "endLine": 218,
        "endChar": 20
      },
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4548b9f1_5d4c2095",
        "filename": "src/router/index.js",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2020-07-30T23:37:55Z",
      "side": 1,
      "message": "Actually, now that I think of it, not sure this will work well with certain pages. We sometimes make multiple requests to the same endpoint while on the same page–we\u0027ve discussed whether or not this is the best pattern but in certain cases it is easier to make a new GET request (for example) after a POST to make a new object (we do this on local user management). \nFor this commit, if you can save that initial chassis id you wouldn\u0027t need the second request anyways",
      "parentUuid": "449eee89_6e6a8b2e",
      "range": {
        "startLine": 217,
        "startChar": 0,
        "endLine": 218,
        "endChar": 20
      },
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed0e6f36_44ff9f3a",
        "filename": "src/store/api.js",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2020-07-27T22:45:09Z",
      "side": 1,
      "message": "should we clear cache when getting a 403 vs on every navigation change?",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 21,
        "endChar": 31
      },
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44be4f4c_2412cd2f",
        "filename": "src/store/api.js",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1000888
      },
      "writtenOn": "2020-07-28T03:31:56Z",
      "side": 1,
      "message": "I think it should happen for now on every navigation change which is safest bet and any changes in this should be deeply though through and addressed in separate PRs. It can cause issues especially if data is updated either by current or some other user.",
      "parentUuid": "ed0e6f36_44ff9f3a",
      "range": {
        "startLine": 21,
        "startChar": 2,
        "endLine": 21,
        "endChar": 31
      },
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "27700908_bf74ef27",
        "filename": "src/store/modules/Control/PowerControlStore.js",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2020-07-27T22:45:09Z",
      "side": 1,
      "message": "We have implemented a similar pattern of fetching dynamic chassis ids. Can we try something similar here? \nhttps://github.com/openbmc/webui-vue/blob/master/src/store/modules/Health/ChassisStore.js#L41-L50",
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a442cb8_12648d52",
        "filename": "src/store/modules/Control/PowerControlStore.js",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000888
      },
      "writtenOn": "2020-07-28T03:31:56Z",
      "side": 1,
      "message": "This PR fixes very concrete bug that regards hardcored resource id in redfish request. Changing requests to handle multiple resources instead of one is very different beast and I think it\u0027s better if it\u0027s not addressed here because my indention is to change hardcored resource id in tenths of places, each one requiring separate consideration if I were to start implementing support of multiple resources per view, instead of one.",
      "parentUuid": "27700908_bf74ef27",
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b11e0146_798fc2a6",
        "filename": "src/store/modules/Control/PowerControlStore.js",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2020-07-30T22:56:03Z",
      "side": 1,
      "message": "Sorry, I should have been more specific. I meant can you follow the Promise chaining pattern instead of the try/catch error handling? It\u0027s a just a stylistic preference for consistency.",
      "parentUuid": "5a442cb8_12648d52",
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cbefac7d_703ae4b2",
        "filename": "src/store/modules/Control/PowerControlStore.js",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2020-07-30T22:56:03Z",
      "side": 1,
      "message": "I would recommend storing the initially fetched chassis id in this store state so you don\u0027t have to make another request (line 44)",
      "range": {
        "startLine": 27,
        "startChar": 14,
        "endLine": 27,
        "endChar": 23
      },
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b7a74df_5748684d",
        "filename": "src/store/modules/Control/PowerControlStore.js",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2020-07-30T22:59:40Z",
      "side": 1,
      "message": "We have multiple Chassis ids. :/",
      "parentUuid": "cbefac7d_703ae4b2",
      "range": {
        "startLine": 27,
        "startChar": 14,
        "endLine": 27,
        "endChar": 23
      },
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bca53b6b_8f353d50",
        "filename": "src/store/modules/Control/PowerControlStore.js",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1000402
      },
      "writtenOn": "2020-07-30T23:18:42Z",
      "side": 1,
      "message": "We\u0027re currently hardcoding the first item in the chassis collection–are you saying that could change? (not be the first value)?",
      "parentUuid": "1b7a74df_5748684d",
      "range": {
        "startLine": 27,
        "startChar": 14,
        "endLine": 27,
        "endChar": 23
      },
      "revId": "79a865591ab1909dc5b16e136183192d1096ab63",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}