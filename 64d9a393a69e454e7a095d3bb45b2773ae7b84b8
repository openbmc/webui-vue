{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "19aacb06_aa5aee87",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2025-03-10T17:03:19Z",
      "side": 1,
      "message": "Can you add more to the commit msg here?  Why is this needed?\nHow often does this update values ? \nHow was 1 second decided ? \nHow many calls does this make when it updates?",
      "revId": "64d9a393a69e454e7a095d3bb45b2773ae7b84b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8501a69_a116d682",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2025-03-11T11:29:42Z",
      "side": 1,
      "message": "I\u0027ve updated commit message.\n1 seconds look optimal for sensor data refresh.",
      "parentUuid": "19aacb06_aa5aee87",
      "revId": "64d9a393a69e454e7a095d3bb45b2773ae7b84b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de1bf41f_4d2e58e7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2025-03-12T02:15:21Z",
      "side": 1,
      "message": "getSensors is a request per sensor + 1.. Systems can have 100+ sensors in a system. \nThis could be a 100 requests per second\n\nLike once a min would be the max I could see us go until we get the expand query parameter in..",
      "parentUuid": "a8501a69_a116d682",
      "revId": "64d9a393a69e454e7a095d3bb45b2773ae7b84b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0eeb78c3_895fbe0b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2025-03-12T02:16:21Z",
      "side": 1,
      "message": "Unless I am reading this code wrong \n```\n    async getSensors({ commit }, id) {\n      const sensors \u003d await api\n        .get(`${id}/Sensors`)\n        .then((response) \u003d\u003e response.data.Members)\n        .catch((error) \u003d\u003e console.log(error));\n      if (!sensors) return;\n      const promises \u003d sensors.map((sensor) \u003d\u003e {\n        return api.get(sensor[\u0027@odata.id\u0027]).catch((error) \u003d\u003e {\n          console.log(error);\n          return error;\n        });\n      });\n      return await api.all(promises).then((responses) \u003d\u003e {\n        const sensorData \u003d [];\n        responses.forEach((response) \u003d\u003e {\n          if (response.data) {\n            sensorData.push({\n              name: response.data.Name,\n              status: response.data.Status?.Health,\n              currentValue: response.data.Reading,\n              lowerCaution: response.data.Thresholds?.LowerCaution?.Reading,\n              upperCaution: response.data.Thresholds?.UpperCaution?.Reading,\n              lowerCritical: response.data.Thresholds?.LowerCritical?.Reading,\n              upperCritical: response.data.Thresholds?.UpperCritical?.Reading,\n              units: response.data.ReadingUnits,\n            });\n          }\n        });\n        commit(\u0027setSensors\u0027, sensorData);\n      });\n    },\n```",
      "parentUuid": "de1bf41f_4d2e58e7",
      "revId": "64d9a393a69e454e7a095d3bb45b2773ae7b84b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dcd7b425_cf1e3958",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2025-03-12T08:54:34Z",
      "side": 1,
      "message": "Your recommendation ?",
      "parentUuid": "0eeb78c3_895fbe0b",
      "revId": "64d9a393a69e454e7a095d3bb45b2773ae7b84b8",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}