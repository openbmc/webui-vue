{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "328673a9_f10932e1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-06-20T16:48:21Z",
      "side": 1,
      "message": "https://gerrit.openbmc.org/c/openbmc/bmcweb/+/71986 needs to go first correct?",
      "revId": "9eaaa8faa1593f1bd3d8ed369e225636b6239580",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e52785d6_3f1649c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 30,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-06-20T21:39:45Z",
      "side": 1,
      "message": "\u003e https://gerrit.openbmc.org/c/openbmc/bmcweb/+/71986 needs to go first correct?\n\nIndeed, without that bmcweb patch webui wouldn\u0027t be able to use the websocket-based features (IP KVM, SOL, VM) so it would be a regression.\n\nI\u0027m working on incorporating the feedback I got there.",
      "parentUuid": "328673a9_f10932e1",
      "revId": "9eaaa8faa1593f1bd3d8ed369e225636b6239580",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b528fcdc_341d9cb7",
        "filename": "src/store/modules/Authentication/AuthenticanStore.js",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-27T21:55:21Z",
      "side": 1,
      "message": "nitpick:\n\nThe SessionService URI is actually a known value in the specification, so we don\u0027t need to go to service root first.",
      "revId": "9eaaa8faa1593f1bd3d8ed369e225636b6239580",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d6042d3_0fc70c65",
        "filename": "src/store/modules/Authentication/AuthenticanStore.js",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-06-27T22:32:34Z",
      "side": 1,
      "message": "\u003e nitpick:\n\u003e \n\u003e The SessionService URI is actually a known value in the specification, so we don\u0027t need to go to service root first.\n\nhttps://www.dmtf.org/sites/default/files/standards/documents/DSP0266_1.20.1.html#redfish-login-sessions tells me\n```\nTo establish a session, find the URI in either:\n\n    The session service\u0027s Sessions property.\n    The service root\u0027s links property under the Sessions property.\n```\n\"find the URI\" means an extra request is needed either way or do I get it wrong?",
      "parentUuid": "b528fcdc_341d9cb7",
      "revId": "9eaaa8faa1593f1bd3d8ed369e225636b6239580",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "24c70950_90640c45",
        "filename": "src/store/modules/Authentication/AuthenticanStore.js",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-06-27T21:55:21Z",
      "side": 1,
      "message": "I suspect we could just keep the old paths, and ignore x-auth-token entirely?",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 56
      },
      "revId": "9eaaa8faa1593f1bd3d8ed369e225636b6239580",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "550c54b4_26a49055",
        "filename": "src/store/modules/Authentication/AuthenticanStore.js",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-06-27T22:32:34Z",
      "side": 1,
      "message": "\u003e I suspect we could just keep the old paths, and ignore x-auth-token entirely?\n\nIt provides compatibility to standard Redfish and offers way forward to make webui-vue usable on non-bmcweb implementations. It doesn\u0027t increase code complexity considerably, it\u0027s all nicely contained in this single file. So why not?",
      "parentUuid": "24c70950_90640c45",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 56
      },
      "revId": "9eaaa8faa1593f1bd3d8ed369e225636b6239580",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "65533b4d_a7aa8794",
        "filename": "src/store/modules/Authentication/AuthenticanStore.js",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1000936
      },
      "writtenOn": "2024-06-27T22:52:28Z",
      "side": 1,
      "message": "\u003e \u003e I suspect we could just keep the old paths, and ignore x-auth-token entirely?\n\u003e \n\u003e It provides compatibility to standard Redfish and offers way forward to make webui-vue usable on non-bmcweb implementations. It doesn\u0027t increase code complexity considerably, it\u0027s all nicely contained in this single file. So why not?\n\nAlso it provides (limited because websocket features wouldn\u0027t be available) compatibility with bmcweb versions where non-standard cookie auth via standard endpoint is not enabled.\n\nAnd in general I can not see how making webui-vue more compatible with standard Redfish can be undesired especially if it doesn\u0027t increase complexity much.",
      "parentUuid": "550c54b4_26a49055",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 75,
        "endChar": 56
      },
      "revId": "9eaaa8faa1593f1bd3d8ed369e225636b6239580",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}