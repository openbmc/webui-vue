{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b0b9c841_79cd2635",
        "filename": "src/locales/en-US.json",
        "patchSetId": 6
      },
      "lineNbr": 371,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-09-20T15:17:56Z",
      "side": 1,
      "message": "this reads like a programmer diagnostic \n Timed out waiting for BMC Ready after reset.",
      "revId": "dcc9b339072fa0a1cbcf2f4085c77193727a95d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40d57e19_375c5023",
        "filename": "src/locales/en-US.json",
        "patchSetId": 6
      },
      "lineNbr": 371,
      "author": {
        "id": 1002106
      },
      "writtenOn": "2024-09-20T23:46:09Z",
      "side": 1,
      "message": "and, assuming this message can be used for other device resets, not just BMC reset, maybe:\n\"resetFailedMessage\": \"Reset failed. The updated firmware has not yet been activated.\"",
      "parentUuid": "b0b9c841_79cd2635",
      "revId": "dcc9b339072fa0a1cbcf2f4085c77193727a95d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d93461cf_8775d8a5",
        "filename": "src/locales/en-US.json",
        "patchSetId": 6
      },
      "lineNbr": 371,
      "author": {
        "id": 1002163
      },
      "writtenOn": "2024-10-08T03:51:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40d57e19_375c5023",
      "revId": "dcc9b339072fa0a1cbcf2f4085c77193727a95d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4be2deab_860b3e6c",
        "filename": "src/store/modules/Operations/FirmwareStore.js",
        "patchSetId": 6
      },
      "lineNbr": 330,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-09-20T15:17:56Z",
      "side": 1,
      "message": "this doesn\u0027t differentiate between no response and different response and is misleading",
      "revId": "dcc9b339072fa0a1cbcf2f4085c77193727a95d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "693bfd85_74a29d2b",
        "filename": "src/store/modules/Operations/FirmwareStore.js",
        "patchSetId": 6
      },
      "lineNbr": 330,
      "author": {
        "id": 1002106
      },
      "writtenOn": "2024-09-20T23:46:09Z",
      "side": 1,
      "message": "isManagerResponsiveAndStateEnabled() ðŸ˜Š\n\nThis is polled.  No response is expected as we awaiting a BMC response after a reset.\nEven if the BMC responds and reports a State from the Manager, a safe(?) assumption is that it is not ready (assumed to not be finished with initialization \u0026 discovery) until it reaches the \"Enabled\" State.  Is there a better way?\n\nOr are you suggesting that we be more literal with a response from the catch() here?  Or perhaps not catch() here and require the caller to catch?\n\nOr just add some JSDOC to the function header for clarification?  \u003c-- I like this one",
      "parentUuid": "4be2deab_860b3e6c",
      "revId": "dcc9b339072fa0a1cbcf2f4085c77193727a95d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3217440c_f074356b",
        "filename": "src/store/modules/Operations/FirmwareStore.js",
        "patchSetId": 6
      },
      "lineNbr": 330,
      "author": {
        "id": 1002163
      },
      "writtenOn": "2024-10-08T03:51:27Z",
      "side": 1,
      "message": "Done.  And the new name isManagerResponsiveAndStateEnabled is good enough to be self-explanatory, No need jsdoc comments.",
      "parentUuid": "693bfd85_74a29d2b",
      "revId": "dcc9b339072fa0a1cbcf2f4085c77193727a95d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54c68a6e_89bf9dcb",
        "filename": "src/store/modules/Operations/FirmwareStore.js",
        "patchSetId": 6
      },
      "lineNbr": 330,
      "author": {
        "id": 1000021
      },
      "writtenOn": "2024-12-18T12:59:24Z",
      "side": 1,
      "message": "I\u0027d request the message at least state something like `not responding or not enabled`. I expect people especially casual coders to peek at the console log but not search for the function name in the context let alone find documentation comments especially when the source is optimized and packaged without formatting.",
      "parentUuid": "3217440c_f074356b",
      "revId": "dcc9b339072fa0a1cbcf2f4085c77193727a95d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f696e61b_fbbd49ec",
        "filename": "src/store/modules/Operations/FirmwareStore.js",
        "patchSetId": 6
      },
      "lineNbr": 330,
      "author": {
        "id": 1002106
      },
      "writtenOn": "2024-12-18T13:35:28Z",
      "side": 1,
      "message": "Agreed.  In fact this should handle both cases separately.  Handle a timeout and also handle the case where the \u0027Enabled\u0027 state is not matched.  Would be best to also output the current state in that case, something like:  \"Manager not yet in \u0027Enabled\u0027 State, current State: %{State}\"",
      "parentUuid": "54c68a6e_89bf9dcb",
      "revId": "dcc9b339072fa0a1cbcf2f4085c77193727a95d6",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}