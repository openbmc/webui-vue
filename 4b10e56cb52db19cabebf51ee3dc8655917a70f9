{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "aad40713_7f800013",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-07-11T19:35:19Z",
      "side": 1,
      "message": "Don\u0027t we need to do this a lot of places?",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "702a0202_da25ecc7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-12T14:09:57Z",
      "side": 1,
      "message": "I imagine so, trying to keep the scope contained...",
      "parentUuid": "aad40713_7f800013",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d725087a_f61fb245",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-17T14:33:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "702a0202_da25ecc7",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20864745_e56bb68a",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1001314
      },
      "writtenOn": "2024-09-09T04:38:52Z",
      "side": 1,
      "message": "We should add an additional feedback message for this change. Currently we have only \"Field required\" as error message.",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c90c2e1_ad3f628f",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1001314
      },
      "writtenOn": "2024-07-14T14:03:22Z",
      "side": 1,
      "message": "This validation would be better if made in the back-end as well? Not accept if there are whitespaces? Any thoughts?",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "23b799ff_4dfdf7bd",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-15T18:38:14Z",
      "side": 1,
      "message": "I agree, I prefer back-end user input validation to ensure consistency regardless of which client is used. I will spin up a code review to validate the input in redfish-core in bmcweb.",
      "parentUuid": "4c90c2e1_ad3f628f",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f71b0824_7ea84382",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-17T14:35:02Z",
      "side": 1,
      "message": "I was wondering if the validation should be done in bmcweb webserver (in redfish-core) when it is handling the URI, or back further on. Any ideas on where in OpenBMC user input validation is done?",
      "parentUuid": "23b799ff_4dfdf7bd",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c4638a5_cf2e98a3",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2024-07-26T21:19:45Z",
      "side": 1,
      "message": "\u003e I prefer back-end user input validation to ensure consistency regardless of which client is used. I will spin up a code review to validate the input in redfish-core in bmcweb.\n\nIs there a bmcweb review for this?\n\n\u003e Any ideas on where in OpenBMC user input validation is done?\n\nbmcweb\u0027s LDAP implementation is done at https://github.com/openbmc/bmcweb/blob/2d57219665f47c7fd9c2cdbc31a588f1da51ea72/redfish-core/lib/account_service.hpp#L64",
      "parentUuid": "f71b0824_7ea84382",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "81dff31d_7d02e117",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-26T21:29:19Z",
      "side": 1,
      "message": "Thank you! \n\nDo we want to abandon this change altogether in webui-vue and only do it in bmcweb? Or keep both?",
      "parentUuid": "1c4638a5_cf2e98a3",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f13a175c_ee2ae299",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-29T16:31:51Z",
      "side": 1,
      "message": "Looked in account service in bmcweb and saw that no validation seems to be happening for other patches as well. Also, checked that the validation for user name is happening in the webui-vue front end in the modal for user. Before I dig more into this, do we want to be be inconsistent and do group name input validation in bmcweb instead of webui-vue unlike the user name?",
      "parentUuid": "81dff31d_7d02e117",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "435b08d7_eef2a862",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-29T19:22:04Z",
      "side": 1,
      "message": "Opened a review in bmcweb to validate it: https://gerrit.openbmc.org/c/openbmc/bmcweb/+/73166\n\nOnly if the group name has only whitespaces, I\u0027m not trimming the whitespaces in there yet (for now to avoid complexity unless reviewers feel otherwise).",
      "parentUuid": "f13a175c_ee2ae299",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "288b247b_ccf40140",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-07-29T19:45:54Z",
      "side": 1,
      "message": "We want to do hostname validation in phosphor-networkd or phosphor-ldap, the daemons responsible for handling the network configuration.\n\nWe might also do it in the webui for performance reasons to not have to wait for a submit and return from the backend.",
      "parentUuid": "435b08d7_eef2a862",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b4e1877_6b005493",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-07-30T14:50:42Z",
      "side": 1,
      "message": "Hey Everyone. While I have a branch ready to do the validation in the phosphor-user-manager when the group is created (https://github.com/openbmc/phosphor-user-manager/blob/master/user_mgr.cpp#L460), I am unable to open a code review for it since the existing unit tests for me are failing on my setup. While I see what is going on there (I did submit https://github.com/openbmc/phosphor-user-manager/issues/17 for it in case it is a widespread issue), any objections to continuing with this code review or abandoning it altogether and only having the validation in the backend? \n\nI believe that we should have front end validation as well as a first line of defense, but if the general consensus is that the GUI has 0 validation for input fields and all validation happens in the backend, I can abandon this code review.",
      "parentUuid": "288b247b_ccf40140",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "385c196b_621b5c0d",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1001314
      },
      "writtenOn": "2024-09-09T04:29:05Z",
      "side": 1,
      "message": "I also think, we should still have a validation in the front-end.",
      "parentUuid": "3b4e1877_6b005493",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3e9f320_f34a539b",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1002106
      },
      "writtenOn": "2024-09-09T12:31:00Z",
      "side": 1,
      "message": "Yes, since Redfish can be accessed by other clients, all validation *must* be done on the backend.  However, for UX reasons, it is also preferable to do simple validation on the front end as well.  It is a better UX to let them know where in the form they got it wrong before they apply.",
      "parentUuid": "385c196b_621b5c0d",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "553a5c3e_3e135177",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1002110
      },
      "writtenOn": "2024-09-09T15:03:13Z",
      "side": 1,
      "message": "Since there is agreement from two people that front-end validation should be conducted alongside back-end validation, I will keep this code review open.",
      "parentUuid": "d3e9f320_f34a539b",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d5cb7a9_68385c6f",
        "filename": "src/views/SecurityAndAccess/Ldap/ModalAddRoleGroup.vue",
        "patchSetId": 3
      },
      "lineNbr": 86,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2024-09-09T15:35:27Z",
      "side": 1,
      "message": "Fine to leave the PR open, but the backend fix needs to come first so we can verify it.  Or at least produce the failing test case in curl that someone else can go implement for the backend.  as-is I don\u0027t know how to get this error to generate in the backend.",
      "parentUuid": "553a5c3e_3e135177",
      "revId": "4b10e56cb52db19cabebf51ee3dc8655917a70f9",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}