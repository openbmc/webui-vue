{
  "comments": [
    {
      "key": {
        "uuid": "5c4e2bc5_8f533403",
        "filename": "src/store/modules/Logs/DumpsStore.js",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-27T19:17:45Z",
      "side": 1,
      "message": "This assumes that the Managers list is of size 1, which the redfish spec does not gaurantee.  This also implies that the collection has an order, which the spec doesn\u0027t gaurantee.",
      "range": {
        "startLine": 29,
        "startChar": 57,
        "endLine": 29,
        "endChar": 60
      },
      "revId": "ff6049b0dbb6db3cf91a9e7eff5d4ffd41632bc7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e11e2b81_6b7b6ee1",
        "filename": "src/store/modules/Logs/DumpsStore.js",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1000641
      },
      "writtenOn": "2021-08-31T10:06:55Z",
      "side": 1,
      "message": "I agree, so as its not certain which index will hold correct API value, i have used template literals to make the code less hardcoded, something like api.get(`${response.data[\u0027@odata.id\u0027]}/bmc`)\n\nWhere {response.data[\u0027@odata.id\u0027]} will be coming from spec and as \u0027bmc\u0027 is required at the end of the API, I have concatenated that.",
      "parentUuid": "5c4e2bc5_8f533403",
      "range": {
        "startLine": 29,
        "startChar": 57,
        "endLine": 29,
        "endChar": 60
      },
      "revId": "ff6049b0dbb6db3cf91a9e7eff5d4ffd41632bc7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3793e023_bb90cf36",
        "filename": "src/store/modules/Logs/DumpsStore.js",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-09-10T18:23:10Z",
      "side": 1,
      "message": "\u003e I agree, so as its not certain which index will hold correct API value, i have used template literals to make the code less hardcoded, something like api.get(`${response.data[\u0027@odata.id\u0027]}/bmc`)\n\u003e \n\u003e Where {response.data[\u0027@odata.id\u0027]} will be coming from spec and as \u0027bmc\u0027 is required at the end of the API, I have concatenated that.\n\nThis is still hardcoding the name \"bmc\" which the spec doesn\u0027t allow.  Please don\u0027t do that.",
      "parentUuid": "e11e2b81_6b7b6ee1",
      "range": {
        "startLine": 29,
        "startChar": 57,
        "endLine": 29,
        "endChar": 60
      },
      "revId": "ff6049b0dbb6db3cf91a9e7eff5d4ffd41632bc7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ed3d4237_f45c2d7e",
        "filename": "src/store/modules/Logs/DumpsStore.js",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1000641
      },
      "writtenOn": "2021-09-22T11:49:02Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3793e023_bb90cf36",
      "range": {
        "startLine": 29,
        "startChar": 57,
        "endLine": 29,
        "endChar": 60
      },
      "revId": "ff6049b0dbb6db3cf91a9e7eff5d4ffd41632bc7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c6a28923_99baa7db",
        "filename": "src/store/modules/Logs/DumpsStore.js",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-27T19:17:45Z",
      "side": 1,
      "message": "Same thing here.",
      "range": {
        "startLine": 31,
        "startChar": 57,
        "endLine": 31,
        "endChar": 60
      },
      "revId": "ff6049b0dbb6db3cf91a9e7eff5d4ffd41632bc7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "333236bd_f24ae85d",
        "filename": "src/store/modules/Logs/DumpsStore.js",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1000641
      },
      "writtenOn": "2021-08-31T10:06:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6a28923_99baa7db",
      "range": {
        "startLine": 31,
        "startChar": 57,
        "endLine": 31,
        "endChar": 60
      },
      "revId": "ff6049b0dbb6db3cf91a9e7eff5d4ffd41632bc7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "42443ef4_37a8dd5b",
        "filename": "src/store/modules/Logs/DumpsStore.js",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000153
      },
      "writtenOn": "2021-08-27T19:17:45Z",
      "side": 1,
      "message": "Same here.  There\u0027s no guarantee there is only one system, and in fact, I believe this API has 2 members, so this is hardcoding an assumption that the redfish spec does not promise.",
      "range": {
        "startLine": 39,
        "startChar": 57,
        "endLine": 39,
        "endChar": 60
      },
      "revId": "ff6049b0dbb6db3cf91a9e7eff5d4ffd41632bc7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1bd01acf_af152b2b",
        "filename": "src/store/modules/Logs/DumpsStore.js",
        "patchSetId": 3
      },
      "lineNbr": 39,
      "author": {
        "id": 1000641
      },
      "writtenOn": "2021-08-31T10:06:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "42443ef4_37a8dd5b",
      "range": {
        "startLine": 39,
        "startChar": 57,
        "endLine": 39,
        "endChar": 60
      },
      "revId": "ff6049b0dbb6db3cf91a9e7eff5d4ffd41632bc7",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}