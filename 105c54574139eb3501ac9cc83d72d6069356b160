{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bde5d0db_58547541",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-03-24T16:29:15Z",
      "side": 1,
      "message": "Any chance to make this configurable via meson option?\n\nOtherwise it might be surprising to some developers that there is additional requests when they are debugging bmcweb.\n\nMight be easier to get this in as an optional feature for now,\nthen change it to be default-enabled later?",
      "revId": "105c54574139eb3501ac9cc83d72d6069356b160",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ab42602_099a40e8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2025-03-26T14:35:22Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bde5d0db_58547541",
      "revId": "105c54574139eb3501ac9cc83d72d6069356b160",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "25554118_ece6aa60",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2025-03-18T07:55:39Z",
      "side": 1,
      "message": "```\ndiff --git a/redfish-core/lib/eventservice_sse.hpp b/redfish-core/lib/eventservice_sse.hpp\nindex 3cbca3bc8b..e0223a57b6 100644\n--- a/redfish-core/lib/eventservice_sse.hpp\n+++ b/redfish-core/lib/eventservice_sse.hpp\n@@ -31,7 +31,7 @@ inline void createSubscription(crow::sse_socket::Connection\u0026 conn)\n\n     subValue-\u003eprotocol \u003d \"Redfish\";\n     subValue-\u003eretryPolicy \u003d \"TerminateAfterRetries\";\n-    subValue-\u003eeventFormatType \u003d \"Event\";\n+    subValue-\u003eeventFormatType \u003d \"MetricReport\";\n\n     std::string id \u003d manager.addSubscription(subValue, false);\n     if (id.empty())\n```\nWith the change, SSE is able to receive MetricReport events. Verified for both Periodic \u0026 OnChange.",
      "revId": "105c54574139eb3501ac9cc83d72d6069356b160",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11ae6dce_78020b43",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2025-03-21T09:09:45Z",
      "side": 1,
      "message": "Ping. expand query mechanism work very well \u0026 I\u0027ve tested in sbp1 with 600+ sensors.\nCan we merge this ?",
      "revId": "105c54574139eb3501ac9cc83d72d6069356b160",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "194662ef_0f1ac761",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000020
      },
      "writtenOn": "2025-03-22T04:17:15Z",
      "side": 1,
      "message": "Expand isn\u0027t supported on all platforms, what happens if it isn\u0027t supported ?",
      "parentUuid": "11ae6dce_78020b43",
      "revId": "105c54574139eb3501ac9cc83d72d6069356b160",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26b1a737_a505e461",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001749
      },
      "writtenOn": "2025-03-22T06:43:17Z",
      "side": 1,
      "message": "there is check for max expand lecel, if it isn\u0027t good enough for our use case then getAllSensors uses the previous mechanism. updateAllSensor does nothing.",
      "parentUuid": "194662ef_0f1ac761",
      "revId": "105c54574139eb3501ac9cc83d72d6069356b160",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5da6d8f1_a90ee26f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2025-03-24T09:57:34Z",
      "side": 1,
      "message": "Hi All, @gunnar@gmills.xyz Can we merge this?",
      "revId": "105c54574139eb3501ac9cc83d72d6069356b160",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e1faedac_92900276",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-03-24T16:29:15Z",
      "side": 1,
      "message": "I\u0027m in favor of the feature (to be opt-in) but cannot say much about the code\n(lack of JS knowledge)",
      "revId": "105c54574139eb3501ac9cc83d72d6069356b160",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28e28757_4b5ac742",
        "filename": "src/store/modules/HardwareStatus/SensorsStore.js",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1001749
      },
      "writtenOn": "2025-03-22T06:43:17Z",
      "side": 1,
      "message": "if expand isn\u0027t supported then it just logs them for now.",
      "revId": "105c54574139eb3501ac9cc83d72d6069356b160",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4a0de6b_64be12b8",
        "filename": "src/views/HardwareStatus/Sensors/Sensors.vue",
        "patchSetId": 4
      },
      "lineNbr": 245,
      "author": {
        "id": 1001712
      },
      "writtenOn": "2025-03-24T16:29:15Z",
      "side": 1,
      "message": "nit: can ```60000``` be a named constant to avoid duplicating it on line 237?\n\nOtherwise perhaps define some function ```getRefreshIntervalMilliseconds()``` or similar.",
      "revId": "105c54574139eb3501ac9cc83d72d6069356b160",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94ec46b6_f7813508",
        "filename": "src/views/HardwareStatus/Sensors/Sensors.vue",
        "patchSetId": 4
      },
      "lineNbr": 245,
      "author": {
        "id": 1001426
      },
      "writtenOn": "2025-03-26T14:35:22Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e4a0de6b_64be12b8",
      "revId": "105c54574139eb3501ac9cc83d72d6069356b160",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}